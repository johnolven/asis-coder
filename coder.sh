#!/bin/bash

# ==========================================
# ASIS-CODER - SCRIPT PRINCIPAL MODULAR
# ==========================================
# Asistente de desarrollo con IA - Versi√≥n Modular
# Autor: Tu Nombre
# Versi√≥n: 1.0.1

# Obtener el directorio del script (resolviendo enlaces simb√≥licos)
SCRIPT_PATH="${BASH_SOURCE[0]}"
# Resolver enlace simb√≥lico si existe
if [ -L "$SCRIPT_PATH" ]; then
    SCRIPT_PATH="$(readlink "$SCRIPT_PATH")"
fi
SCRIPT_DIR="$(cd "$(dirname "$SCRIPT_PATH")" && pwd)"
LIB_DIR="$SCRIPT_DIR/lib"

# Verificar que el directorio lib existe
if [ ! -d "$LIB_DIR" ]; then
    echo "‚ùå Error: No se encontr√≥ el directorio lib en $LIB_DIR"
    echo "üí° Aseg√∫rate de que todos los m√≥dulos est√©n en la carpeta lib/"
    exit 1
fi

# Importar todos los m√≥dulos
echo "üîÑ Cargando m√≥dulos..."

# M√≥dulo de configuraci√≥n (debe ser el primero)
if [ -f "$LIB_DIR/config.sh" ]; then
    source "$LIB_DIR/config.sh"
    echo "‚úÖ M√≥dulo de configuraci√≥n cargado"
else
    echo "‚ùå Error: No se encontr√≥ config.sh"
    exit 1
fi

# Inicializar directorios de configuraci√≥n
init_config_directories

# M√≥dulo de validaci√≥n de APIs
if [ -f "$LIB_DIR/api_validation.sh" ]; then
    source "$LIB_DIR/api_validation.sh"
    echo "‚úÖ M√≥dulo de validaci√≥n de APIs cargado"
else
    echo "‚ùå Error: No se encontr√≥ api_validation.sh"
    exit 1
fi

# M√≥dulo de gesti√≥n de LLMs
if [ -f "$LIB_DIR/llm_models.sh" ]; then
    source "$LIB_DIR/llm_models.sh"
    echo "‚úÖ M√≥dulo de gesti√≥n de LLMs cargado"
else
    echo "‚ùå Error: No se encontr√≥ llm_models.sh"
    exit 1
fi

# M√≥dulo de gesti√≥n de proyectos
if [ -f "$LIB_DIR/project_manager.sh" ]; then
    source "$LIB_DIR/project_manager.sh"
    echo "‚úÖ M√≥dulo de gesti√≥n de proyectos cargado"
else
    echo "‚ùå Error: No se encontr√≥ project_manager.sh"
    exit 1
fi

# M√≥dulo de interfaz de usuario
if [ -f "$LIB_DIR/ui_interface.sh" ]; then
    source "$LIB_DIR/ui_interface.sh"
    echo "‚úÖ M√≥dulo de interfaz de usuario cargado"
else
    echo "‚ùå Error: No se encontr√≥ ui_interface.sh"
    exit 1
fi

# M√≥dulo de comunicaci√≥n con LLMs
if [ -f "$LIB_DIR/llm_communication.sh" ]; then
    source "$LIB_DIR/llm_communication.sh"
    echo "‚úÖ M√≥dulo de comunicaci√≥n con LLMs cargado"
else
    echo "‚ùå Error: No se encontr√≥ llm_communication.sh"
    exit 1
fi

echo "üéâ Todos los m√≥dulos cargados exitosamente"
echo ""

# Funci√≥n principal
main() {
    if $DEBUG; then
        echo "Coder CLI versi√≥n: $VERSION"
    fi

    case "$1" in
        "-contexto")
            generar_contexto
            ;;
        "-llm")
            update_llm_choice
            ;;
        "-model")
            get_api_config
            update_model
            ;;
        "-token")
            get_api_config
            force_update_api_token
            ;;
        "-config"|"config")
            mostrar_estado_configuracion
            ;;
        "-i")
            modo_interactivo
            ;;
        "-debug")
            DEBUG=true
            shift
            main "$@"
            ;;
        "-v"|"-version")
            echo "Coder CLI versi√≥n: $VERSION"
            ;;
        "-clean")
            limpiar_historial
            ;;
        "-new")
            nuevo_hito
            ;;
        "/init")
            inicializar_proyecto
            ;;
        "-setup"|"setup")
            configuracion_inicial_completa
            ;;
        "historial")
            mostrar_historiales
            ;;
        "-test"|"test")
            probar_configuracion_api
            ;;
        "")
            validar_y_mostrar_ui
            ;;
        *)
            consultar_llm "$*"
            ;;
    esac
}

# Configurar trap para limpieza
trap cleanup EXIT

# Ejecutar funci√≥n principal con todos los argumentos
main "$@" 